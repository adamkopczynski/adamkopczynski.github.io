{"version":3,"sources":["assets/images/react.png","assets/images/pc.jpg","assets/images/poli.jpg","assets/images/chat.jpg","assets/images/yt.jpg","assets/images/me.jpg","assets/icons/code.svg","assets/icons/managment.svg","assets/icons/agile.svg","assets/files/Adam Kopczynski - CV.pdf","components/Header/Header.jsx","components/Divider/Divider.jsx","components/Divider/index.js","components/Button/Button.jsx","components/Button/index.js","components/TopSection/index.js","components/TopSection/TopSection.jsx","components/Portfolio/ProjectCard.jsx","components/Portfolio/projects.js","components/Portfolio/Portfolio.jsx","components/Portfolio/index.js","components/About/About.jsx","components/About/index.js","components/Skills/Skills.jsx","components/Skills/index.js","components/Footer/Footer.jsx","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","useState","window","scrollY","scrolled","setScrolled","document","addEventListener","pageNav","querySelector","innerWidth","style","display","menuItems","querySelectorAll","forEach","elem","e","preventDefault","scrollElemId","href","split","scrollEndElem","getElementById","requestAnimationFrame","timestamp","stamp","Date","getTime","start","startScrollOffset","pageYOffset","scrollEndElemTop","getBoundingClientRect","top","scrollToElem","scroll","startTime","currentTime","duration","runtime","progress","Math","min","t","ease","className","title","onClick","toggleMenuButtonIcon","menu","hidden","classList","contains","toggle","Divider","Button","props","to","children","color","border","rest","role","TopSection","id","PortfolioCard","image","mainTechnology","imgSize","technologies","description","demo","github","name","techLogo","reactImage","src","alt","target","map","item","defaultProps","projects","poliEvents","pc","yt","chat","Portfolio","About","me","Skills","ManagementIcon","CodeIcon","AgileIcon","Footer","rel","App","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01dcc4e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.692adb35.png\";","module.exports = __webpack_public_path__ + \"static/media/pc.5423a7fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/poli.4eb774f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chat.2d48c720.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yt.641c47aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me.26289345.jpg\";","module.exports = __webpack_public_path__ + \"static/media/code.5a1a70f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/managment.ad3f2a77.svg\";","module.exports = __webpack_public_path__ + \"static/media/agile.71ddbac6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Adam Kopczynski - CV.2351a191.pdf\";","import React, { useState } from \"react\";\n\nconst Header = () => {\n  const [scrolled, setScrolled] = useState(window.scrollY > 50);\n\n  document.addEventListener(\"scroll\", () => setScrolled(window.scrollY > 50));\n  document.addEventListener(\"resize\", () => {\n    const pageNav = document.querySelector(\".page-header\");\n\n    if (window.innerWidth > 768) {\n      pageNav.style.display = \"flex\";\n    }\n  });\n\n  // Grab all the scroll class anchor elements, use whatever class you like\n  const menuItems = document.querySelectorAll(\".menu-item\");\n\n  const scroll = (elem) => {\n    elem.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n\n      // 1. Get the element id to which you want to scroll\n      const scrollElemId = elem.href.split(\"#\")[1];\n\n      // 2. find that node from the document\n      const scrollEndElem = document.getElementById(scrollElemId);\n\n      // 3. and well animate to that node..\n      const anim = requestAnimationFrame((timestamp) => {\n        const stamp = timestamp || new Date().getTime();\n        const duration = 800;\n        const start = stamp;\n\n        const startScrollOffset = window.pageYOffset;\n        const scrollEndElemTop = scrollEndElem.getBoundingClientRect().top;\n\n        scrollToElem(\n          start,\n          stamp,\n          duration,\n          scrollEndElemTop - 100,\n          startScrollOffset\n        );\n      });\n    });\n  };\n\n  menuItems.forEach((elem) => scroll(elem));\n\n  const easeInCubic = function (t) {\n    return t * t * t;\n  };\n\n  const scrollToElem = (\n    startTime,\n    currentTime,\n    duration,\n    scrollEndElemTop,\n    startScrollOffset\n  ) => {\n    const runtime = currentTime - startTime;\n    let progress = runtime / duration;\n\n    progress = Math.min(progress, 1);\n\n    const ease = easeInCubic(progress);\n\n    window.scroll(0, startScrollOffset + scrollEndElemTop * ease);\n    if (runtime < duration) {\n      requestAnimationFrame((timestamp) => {\n        const currentTime = timestamp || new Date().getTime();\n        scrollToElem(\n          startTime,\n          currentTime,\n          duration,\n          scrollEndElemTop,\n          startScrollOffset\n        );\n      });\n    }\n  };\n\n  function toggleMenu() {\n    const pageNav = document.querySelector(\".page-header\");\n    const toggleMenuButtonIcon = document.querySelector(\n      \".toggle-menu-btn > i.fas\"\n    );\n    const menu = document.querySelector(\".menu.nav\");\n    const hidden = !toggleMenuButtonIcon.classList.contains(\"fa-times\");\n\n    menu.style.display = hidden ? \"flex\" : \"none\";\n    pageNav.classList.toggle(\"open\");\n    toggleMenuButtonIcon.classList.toggle(\"fa-bars\");\n    toggleMenuButtonIcon.classList.toggle(\"fa-times\");\n  }\n\n  return (\n    <header className={`page-header ${scrolled ? \"scrolled\" : \"\"}`}>\n      <div className=\"row justify-content-between\">\n        <div className=\"col-sm-10 col-md-4 nav-row\">\n          <a\n            className=\"logo\"\n            href=\"https:\\adamkopczynski.github.io\"\n            title=\"Adam Kopczynski - Junior React Developer\"\n          >\n            Adam Kopczynski\n          </a>\n          <button className=\"toggle-menu-btn\" onClick={toggleMenu}>\n            <i className=\"fas fa-bars\"></i>\n          </button>\n        </div>\n        <div className=\"col-md-8 col-sm-12\">\n          <nav className=\"page-nav \">\n            <ul className=\"menu nav justify-content-end\">\n              <li>\n                <a href=\"#home\" className=\"menu-item\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a href=\"#about\" className=\"menu-item\">\n                  About me\n                </a>\n              </li>\n              <li>\n                <a href=\"#portfolio\" className=\"menu-item\">\n                  Portfolio\n                </a>\n              </li>\n              <li>\n                <a href=\"#skills\" className=\"menu-item\">\n                  Skills\n                </a>\n              </li>\n              <li>\n                <a href=\"#contact\" className=\"menu-item\">\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Divider = () => (\n    <div className=\"divider\"></div>\n)\n\nexport default Divider;","import Divider from './Divider';\nimport \"./Divider.scss\";\n\nexport default Divider;","import React from 'react';\n\nconst Button = (props) => {\n    const{\n        to,\n        children,\n        color,\n        border,\n        className,\n        ...rest\n    } = props;\n\n    return(\n        <a \n            href={to} \n            role=\"button\"\n            className={`custom-btn ${className ? className : ''}`}\n            {...rest}>\n            <span>\n                {children}\n            </span>\n        </a>\n    )\n}\n\nexport default Button;","import Button from './Button';\nimport './Button.scss';\n\nexport default Button;","import TopSection from './TopSection';\n\nexport default TopSection;","import React from \"react\";\n\nimport Divider from \"components/Divider\";\nimport Button from \"components/Button\";\n\nconst TopSection = () => {\n  return (\n    <div className=\"skewed-bg \" id=\"home\">\n      <div className=\"skewed-content\">\n        <div className=\"row\">\n          <div className=\"top-section\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-md-6 col-sm-12\">\n                <h1 className=\"top-section__title\">Javascript developer</h1>\n                <Divider />\n                <p>\n                  I am <strong>Javascript/React developer</strong>, fascinated\n                  with new technologies.\n                </p>\n                <Button to=\"#about\" className=\"show-more\" color=\"white\">\n                  Show more\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TopSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/Button';\nimport reactImage from 'assets/images/react.png';\n\nconst PortfolioCard = ({image, imgSize, mainTechnology, technologies, description, demo, github, name, ...props}) => {\n\n    const techLogo = {\n        'react': reactImage,\n        'react-native': 'https://cdn6.aptoide.com/imgs/c/8/f/c8f548826728f7ed9e4eaf3f7bbf5fd6_icon.png?w=240',\n        'node': 'https://cdn.freebiesupply.com/logos/large/2x/nodejs-icon-logo-png-transparent.png'\n    }\n\n    return(\n        <div className=\"item card\">\n\n            {mainTechnology && \n                <div className=\"technology\">\n                    <img src={techLogo[mainTechnology]} alt='Main project technology.' />\n                </div>\n            }\n\n            {image && <img src={image} alt='Project ui.' className='project-image' />}\n\n            <div className=\"card-content\">\n                <h3 className=\"card-title\">{name}</h3>\n\n                <div className=\"project-description\">\n                    {description}\n                </div>\n\n                <div className=\"btn-group\">\n                    {demo && <Button target=\"_blank\" to={demo}>Demo</Button>}\n                    {github && <Button target=\"_blank\" to={github}>Code</Button>}\n                </div>\n\n                <div className=\"technologies\">\n                    {technologies.map(item => <span>{item}</span>)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nPortfolioCard.propTypes = {\n    image: PropTypes.string.isRequired,\n    mainTechnology: PropTypes.string.isRequired,\n    technologies: PropTypes.array.isRequired,\n    description: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n}\n\nPortfolioCard.defaultProps = {\n    image: '',\n    name: 'project'\n}\n\nexport default PortfolioCard;","import pc from 'assets/images/pc.jpg';\nimport poliEvents from 'assets/images/poli.jpg';\nimport chat from 'assets/images/chat.jpg';\nimport yt from 'assets/images/yt.jpg';\n\nconst projects = [\n    {\n        name: 'Poli~Events',\n        description: 'Project for Lodz University of technolgy\\'s community.',\n        image: poliEvents,\n        mainTechnology: 'react',\n        demo: null,\n        github: null,\n        technologies: ['react', 'scss', 'firebase']\n    },\n    {\n        name: 'Pan Cytat',\n        description: 'Project for Pan Cytat.',\n        image: pc,\n        mainTechnology: 'react-native',\n        demo: 'https://expo.io/@akopczynski/pan-cytat',\n        github: 'https://github.com/adamkopczynski/pancytat',\n        technologies: ['react-native', 'expo', 'native-base']\n    },\n    {\n        name: 'Youtube music',\n        description: 'Fetch data from yt api and allow to listen music in bg.',\n        image: yt,\n        mainTechnology: 'react',\n        demo: 'https://github.com/adamkopczynski/react-sound',\n        github: 'https://github.com/adamkopczynski/react-sound',\n        technologies: ['react', 'yt-api', 'redux']\n    },\n    {\n        name: 'Chat App',\n        description: 'Chat app in NodeJS.',\n        image: chat,\n        mainTechnology: 'node',\n        demo: 'https://chat-app-ak.herokuapp.com/',\n        github: 'https://github.com/adamkopczynski/node-chat-app',\n        technologies: ['react', 'node', 'websockets']\n    }\n]\n\nexport default projects;","import React from 'react';\nimport PortfolioCard from './ProjectCard';\nimport Divider from 'components/Divider';\n\nimport projects from './projects';\n\nconst Portfolio = () => {\n\n    return(\n        <section className=\"section portfolio\" id=\"portfolio\">\n            <h3 className=\"mb-50 section-title\">Portfolio</h3>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-3\">\n                    <Divider />\n                </div>\n            </div>\n\n            <div className=\"portfolio-grid mb-2\">\n                <div className=\"row justify-content-center\">\n                    {\n                        projects.map(item => \n                            <div className=\"col-sm-12 col-md-6 col-lg-4\">\n                                <PortfolioCard {...item} />\n                            </div>    \n                        )\n                    }\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Portfolio;","import Portfolio from './Portfolio';\nimport './Portfolio.scss';\n\nexport default Portfolio;","import React from \"react\";\nimport Divider from \"components/Divider\";\nimport Button from \"components/Button\";\nimport CV from \"assets/files/Adam Kopczynski - CV.pdf\";\nimport me from \"assets/images/me.jpg\";\n\nconst About = () => {\n  return (\n    <section className=\"section about\" id=\"about\">\n      <h3 className=\"mb-50 section-title\">About me</h3>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-3\">\n          <Divider />\n        </div>\n      </div>\n\n      <div className=\"section-content\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-5 col-sm-12\">\n            <div className=\"info-card\">\n              <img src={me} alt=\"Adam Kopczynski\" />\n              <div className=\"card-content\">\n                <h2>Adam Kopczyński</h2>\n                <h3>Javascript Developer</h3>\n                <p>\n                  I am an enthusiast of new technologies, loved with React and\n                  NodeJS. I try to improve my skills every day. I often\n                  participate in conferences, hackathons and workshops.\n                </p>\n                <Button\n                  target=\"_blank\"\n                  href=\"https://www.linkedin.com/in/adamkopczynski/\"\n                >\n                  Download CV\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import About from './About';\nimport './About.scss';\n\nexport default About;","import React from \"react\";\n\nimport Divider from \"components/Divider\";\nimport CodeIcon from \"assets/icons/code.svg\";\nimport ManagementIcon from \"assets/icons/managment.svg\";\nimport AgileIcon from \"assets/icons/agile.svg\";\n\nconst Skills = () => {\n  return (\n    <section className=\"section skills\" id=\"skills\">\n      <h3 className=\"mb-50 section-title\">Skills</h3>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-3\">\n          <Divider />\n        </div>\n      </div>\n\n      <div className=\"skills-content\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-6 col-sm-12 col-lg-4\">\n            <div className=\"skill-card-item\">\n              <div className=\"skill-card-header\">\n                <img src={ManagementIcon} />\n                <h3>Project Managment</h3>\n              </div>\n\n              <div className=\"skill-card-content\">\n                I've participated in Project Management workshops at SkillUp\n                Conference. I have basic knowledge about planning and delegating\n                tasks, calculating risk and communicating in a team.\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-sm-12 col-lg-4\">\n            <div className=\"skill-card-item active\">\n              <div className=\"skill-card-header\">\n                <img src={CodeIcon} />\n                <h3>Coding</h3>\n              </div>\n\n              <div className=\"skill-card-content\">\n                <h4>Technologies:</h4>\n                <ul>\n                  <li>React, React Native</li>\n                  <li>Redux</li>\n                  <li>Javascript</li>\n                  <li>Elixir/Phoenix</li>\n                  <li>MongoDB, Postgres</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-sm-12 col-lg-4\">\n            <div className=\"skill-card-item\">\n              <div className=\"skill-card-header\">\n                <img src={AgileIcon} />\n                <h3>Agile/Scrum</h3>\n              </div>\n\n              <div className=\"skill-card-content\">\n                I've taken part in Scrum workshops on my university organised by\n                Accenture company. We've learned about this framework in\n                practice by doing tasks in sprints, organising \"daily\", planning\n                and developing.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;\n","import Skills from './Skills';\nimport './Skills.scss';\n\nexport default Skills;","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"row justify-content-between\">\n        <div className=\"col-md-3\" id=\"contact\">\n          <h2>Adam Kopczyński</h2>\n          <p className=\"cyan\">akadamkopczynski@gmail.com</p>\n          <p>tel. 669624179</p>\n        </div>\n        <div className=\"col-md-2\">\n          <div className=\"social-media\">\n            <ul>\n              <li>\n                <a\n                  href=\"https://www.facebook.com/adam.kopczynski.3\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"social-media__item\"\n                >\n                  <i className=\"fab fa-facebook-square\"></i>\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://github.com/adamkopczynski\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"social-media__item\"\n                >\n                  <i className=\"fab fa-github\"></i>\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://www.linkedin.com/in/adamkopczynski/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  className=\"social-media__item\"\n                >\n                  <i className=\"fab fa-linkedin\"></i>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Footer from './Footer';\nimport './Footer.scss';\n\nexport default Footer;","import React, { Component } from 'react';\n\nimport Header from 'components/Header';\nimport TopSection from 'components/TopSection';\nimport Portfolio from 'components/Portfolio';\nimport About from 'components/About';\nimport Skills from 'components/Skills';\nimport Footer from 'components/Footer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <TopSection />\n        <About />\n        <Portfolio/>\n        <Skills />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}